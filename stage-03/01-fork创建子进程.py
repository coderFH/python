import os
import time
'''
fork可以创建一个新的进程
'''
ret = os.fork() #他有两个返回值,会区分父子进程,主进程的ret>0  子进程的ret==0
'''
父进程中fork的返回值,就是刚刚创建出来子进程的id
'''
print(ret)  # 855456 0  85546是主进程创造一个子进程后,子进程所在的进程是85546
'''
注意:但你不能说这个ret == 855456 > 0  是主进程创建的子进程id 那就应该代表子进程才对呀? 你下边的判断是不是反了
这里一定要注意,区分父子进程 只看ret是否==0,ret等于0 就是子进程, ret > 0  就是父进程  而ret==855456只是说创建的子进程id是85546,不能作为区分父子进程
'''
if ret > 0:
    while True:
        print("----父进程---%d"%os.getpid()) #getpid打印出当前的进程 比如是85545
        time.sleep(1)
else:
    while True:
        print("----子进程---%d-%d"%(os.getpid(),os.getppid()))  #父进程创建出子进程 所以getppid打印他的父进程就是85545 而自己所在的进程的是85546
        time.sleep(1)
#
# 85546
# ----父进程---85545
# 0
# ----子进程---85546-85545